dpkg - Debian's package maintenance system

The primary interface for the dpkg suite is the ‘dselect’ program;
a more low-level and less user-friendly interface is available in
the form of the ‘dpkg’ command.


### HOW TO BUILD on macOS

* open terminal
* run this script
```bash
./scripts/iosbuild.sh
```

### Special thanks to

* [LeoBelda/lem_in_editor](https://github.com/LeoBelda/lem_in_editor/blob/9c7ca4daa7179ef465e36390ac2f1834e6147157/libs/SDL2/sources/build-scripts/iosbuild.sh)

Releases
--------

The current legacy, stable and development releases can be found at:

  <http://ftp.debian.org/debian/pool/main/d/dpkg/>

For older releases check:

  <http://snapshot.debian.org/package/dpkg/>


Mailing List
------------

The subscription interface and web archives can be found at:

  <https://lists.debian.org/debian-dpkg/>

The mailing list address is (no subscription required to post):

  debian-dpkg@lists.debian.org


Source Repository
-----------------

  <https://git.dpkg.org/cgit/dpkg/dpkg.git>


Building from git source
------------------------

To prepare the dpkg source tree from git before starting the build process
some required software needs to be installed:

  GNU autoconf >= 2.60
  GNU automake >= 1.11
  GNU libtool >= 2.0
  GNU gettext >= 0.19.7 (or just autopoint if using --disable-nls)

After installing the needed software, and running the following command on
the git tree:

  $ ./autogen

the source should be roughly equivalent to the distributed tar source.

To enable translated documentation this software will be needed:

  po4a >= 0.43


Building from tar source
------------------------

The minimum software required to configure and build dpkg from a tarball is:

  C89 compiler with few C99 extensions (see doc/coding-style.txt)
  perl (see doc/coding-style.txt)
  pkg-config
  GNU make

To enable optional functionality or programs, this software might be needed:

  libmd (used by libdpkg, currently falling back to embedded code)
  libz (from zlib, used instead of gzip command-line tool)
  liblzma (from xz utils, used instead of xz command-line tool)
  libbz2 (from bzip2, used instead of bzip2 command-line tool)
  libselinux
  curses compatible library (needed on --enable-dselect)

To run the test suite («make check»):

  Test::MinimumVersion perl module (optional, author)
  Test::Pod perl module (optional)
  Test::Pod::Coverage perl module (optional, author)
  Test::Spelling perl module (optional, author)
  Test::Strict perl module (optional)
  Test::Synopsis perl module (optional, author)
  Test::Perl::Critic perl module (optional, author)
  aspell (optional, author)
  aspell-en (optional, author)
  codespell (optional, author)
  cppcheck (optional, author)
  fakeroot (optional)
  gpg (optional)
  i18nspector (optional, author)
  shellcheck (optional, author)

  Define the environment variable DPKG_DEVEL_MODE or AUTHOR_TESTING to run
  the test suite in development mode, to include tests that might not be
  pertinent during normal release builds.

To enable additional developer's documentation («make doc») this software
will be needed:

  pod2man
  doxygen
  dot

To enable code coverage («./configure --enable-coverage; make coverage»)
this software is needed:

  lcov (from the Linux Test Project)
  Devel-Cover perl module

The build process is done by running the usual «./configure; make». To
see all available configuration options please run «./configure --help».
The following configure options might be of interest to disable specific
programs:

  --disable-dselect
  --disable-start-stop-daemon
  --disable-update-alternatives

And the following to disable modifications to the build flags:

  --disable-compiler-warnings
  --disable-compiler-optimizations
  --disable-linker-optimizations
